library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Lab3 is
   port(
      RST  : in std_logic;
      CLK  : in std_logic;
      EN   : in std_logic;
      CLR  : in std_logic;
      LD   : in std_logic;
      Q    : out unsigned(7 downto 0)
   );
end entity;

architecture X of Lab3 is
begin

	U_MILLISEC_UNITS: entity work.Cont4_mod10
      port map(
         RST  => rst_int,
         CLK  => CLK,
         EN   => EN,
         CLR  => CLR,
         LD   => ld_units,
         LOAD => load_units,
         Q    => q_units,
         COUT => cout_millisec_units
      );
		
	U_MILLISEC_TENS: entity work.Cont4_mod10
      port map(
         RST  => rst_int,
         CLK  => CLK,
         EN   => EN,
         CLR  => CLR,
         LD   => ld_units,
         LOAD => load_units,
         Q    => q_units,
         COUT => cout_millisec_tens
      );
		
   U_SEC_UNITS: entity work.Cont4_mod10
      port map(
         RST  => rst_int,
         CLK  => CLK,
         EN   => EN,
         CLR  => CLR,
         LD   => ld_units,
         LOAD => load_units,
         Q    => q_units,
         COUT => cout_sec_units
      );
		
	U_SEC_TENS: entity work.Cont4_mod10
      port map(
         RST  => rst_int,
         CLK  => CLK,
         EN   => EN,
         CLR  => CLR,
         LD   => ld_units,
         LOAD => load_units,
         Q    => q_units,
         COUT => open
      );


   -- Processo principal
   process(CLK, RST)
   begin
      if RST = '1' then
         -- Reset externo: inicia contador em 12
         rst_int    <= '1';
         ld_units   <= '1';
         ld_tens    <= '1';
         load_units <= "0010"; -- unidades = 2
         load_tens  <= "0001"; -- dezenas = 1
         reload     <= '0';

      elsif rising_edge(CLK) then
         rst_int <= '0'; -- libera reset interno depois do ciclo

         if CLR = '1' then
            -- Clear força voltar para 12
            ld_units   <= '1';
            ld_tens    <= '1';
            load_units <= "0010";
            load_tens  <= "0001";
            reload     <= '0';

         elsif EN = '1' then
            -- Detecta chegada no 68
            if (q_tens = "0110" and q_units = "0111") or (q_tens = "0000" and q_units = "0000") then

               ld_units   <= '1';
               ld_tens    <= '1';
               load_units <= "0010"; -- unidades = 2
               load_tens  <= "0001"; -- dezenas = 1
               reload     <= '0';    -- limpa reload
            else
               ld_units   <= '0';
               ld_tens    <= '0';
            end if;
         end if;
      end if;
   end process;

   -- Saída combinacional
   Q <= to_unsigned(to_integer(q_tens) * 10 + to_integer(q_units), 8);

end architecture;
